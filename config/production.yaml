# Alert Triage System - Production Configuration

# Application metadata
app:
  name: "Alert Triage System"
  version: "1.0.0"
  description: "Production deployment of intelligent security alert triage"
  environment: "production"

# Logging configuration for production
logging:
  level: INFO
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: logs/alert_triage.log
  structured: true  # JSON logging for production
  max_file_size: 52428800  # 50MB
  backup_count: 10
  module_levels:
    asyncio: WARNING
    aiohttp: WARNING
    urllib3: WARNING
    requests: WARNING

# Coral Protocol production settings
coral_protocol:
  max_message_history: 5000
  heartbeat_interval: 30
  message_timeout: 120
  max_queue_size: 2000

# Production agent configurations
agents:
  alert_receiver:
    max_queue_size: 2000
    supported_systems:
      - splunk
      - qradar
      - sentinel
      - crowdstrike
      - carbonblack
      - sentinelone
      - proofpoint
      - mimecast
      - palo_alto
      - fortinet
      - checkpoint
      - custom
    
  false_positive_checker:
    confidence_threshold: 0.75
    enable_ml_analysis: true
    ml_model_path: ${ML_MODEL_PATH:data/models/false_positive_model.pkl}
    trusted_ips:
      - ${TRUSTED_IP_1:10.0.0.1}
      - ${TRUSTED_IP_2:192.168.1.1}
      - ${TRUSTED_IP_3:172.16.0.1}
    whitelist_refresh_interval: 3600  # 1 hour
    
  severity_analyzer:
    enable_dynamic_scoring: true
    escalation_threshold: 0.85
    risk_score_weights:
      alert_type: 0.3
      user_context: 0.2
      network_context: 0.2
      threat_intel: 0.2
      time_factors: 0.1
      
  context_gatherer:
    threat_intel_enabled: ${THREAT_INTEL_ENABLED:true}
    user_context_enabled: ${USER_CONTEXT_ENABLED:true}
    network_context_enabled: ${NETWORK_CONTEXT_ENABLED:true}
    historical_analysis_enabled: ${HISTORICAL_ANALYSIS_ENABLED:true}
    context_timeout: 45
    parallel_queries: true
    cache_results: true
    cache_ttl: 1800  # 30 minutes
    
  response_coordinator:
    auto_escalation_threshold: 0.8
    enable_automation: ${ENABLE_AUTOMATION:true}
    default_assignment_tier: ${DEFAULT_ASSIGNMENT:tier1_analyst}
    soar_enabled: ${SOAR_ENABLED:false}
    automation_approval_required: true
    
  workflow_orchestrator:
    workflow_timeout: 600  # 10 minutes
    max_concurrent_workflows: 500
    default_template: standard_triage
    optimization_enabled: true
    performance_monitoring: true

# Production external integrations
integrations:
  siem:
    enabled: ${SIEM_ENABLED:false}
    type: ${SIEM_TYPE:splunk}
    endpoint: ${SIEM_ENDPOINT}
    api_key: ${SIEM_API_KEY}
    verify_ssl: ${SIEM_VERIFY_SSL:true}
    timeout: 60
    retry_attempts: 3
    rate_limit: 100  # requests per minute
    
  soar:
    enabled: ${SOAR_ENABLED:false}
    type: ${SOAR_TYPE:phantom}
    endpoint: ${SOAR_ENDPOINT}
    api_key: ${SOAR_API_KEY}
    verify_ssl: ${SOAR_VERIFY_SSL:true}
    timeout: 60
    auto_create_incidents: true
    incident_templates:
      critical: ${SOAR_CRITICAL_TEMPLATE:critical_security_incident}
      high: ${SOAR_HIGH_TEMPLATE:high_priority_incident}
      medium: ${SOAR_MEDIUM_TEMPLATE:standard_incident}
    
  threat_intel:
    enabled: ${THREAT_INTEL_ENABLED:false}
    cache_enabled: true
    cache_ttl: 3600
    providers:
      virustotal:
        enabled: ${VT_ENABLED:false}
        api_key: ${VT_API_KEY}
        rate_limit: 4
        timeout: 30
      misp:
        enabled: ${MISP_ENABLED:false}
        url: ${MISP_URL}
        key: ${MISP_KEY}
        verify_ssl: ${MISP_VERIFY_SSL:true}
        timeout: 30
      otx:
        enabled: ${OTX_ENABLED:false}
        api_key: ${OTX_API_KEY}
        timeout: 30
      custom:
        enabled: ${CUSTOM_TI_ENABLED:false}
        endpoints: ${CUSTOM_TI_ENDPOINTS:[]}

# Production API settings
api:
  webhook:
    enabled: true
    host: ${WEBHOOK_HOST:0.0.0.0}
    port: ${WEBHOOK_PORT:8080}
    secret: ${WEBHOOK_SECRET}
    require_auth: ${WEBHOOK_AUTH_REQUIRED:true}
    max_payload_size: ${WEBHOOK_MAX_PAYLOAD:5242880}  # 5MB
    worker_processes: ${WEBHOOK_WORKERS:4}
    
  rest:
    enabled: true
    host: ${API_HOST:0.0.0.0}
    port: ${API_PORT:8081}
    require_auth: ${API_AUTH_REQUIRED:true}
    cors_enabled: ${API_CORS_ENABLED:true}
    worker_processes: ${API_WORKERS:4}
    
  rate_limiting:
    enabled: true
    requests_per_minute: ${RATE_LIMIT_RPM:2000}
    burst_size: ${RATE_LIMIT_BURST:200}
    backend: redis  # redis or memory

# Production security settings
security:
  api_key_required: ${API_KEY_REQUIRED:true}
  jwt_secret: ${JWT_SECRET}
  token_expiry: ${JWT_EXPIRY:3600}
  allowed_origins: ${ALLOWED_ORIGINS:["https://yourdomain.com"]}
  encryption:
    enabled: ${ENCRYPTION_ENABLED:true}
    algorithm: "AES-256-GCM"
    key: ${ENCRYPTION_KEY}
  audit:
    enabled: true
    log_all_requests: true
    retention_days: 90

# Production metrics and monitoring
metrics:
  enabled: true
  prometheus_port: ${PROMETHEUS_PORT:9090}
  collection_interval: 30
  retention_period: 604800  # 7 days
  detailed_metrics: true
  
monitoring:
  health_check_interval: 30
  alert_on_failure: true
  performance_monitoring: true
  audit_logging: true
  sla_monitoring: true
  alerting:
    enabled: ${MONITORING_ALERTS_ENABLED:true}
    webhook_url: ${MONITORING_WEBHOOK_URL}
    thresholds:
      error_rate: 0.05  # 5%
      response_time_p95: 30000  # 30 seconds
      queue_size_warning: 1000
      queue_size_critical: 1500

# Production database settings
database:
  enabled: ${DATABASE_ENABLED:true}
  type: ${DATABASE_TYPE:postgresql}
  host: ${DATABASE_HOST:localhost}
  port: ${DATABASE_PORT:5432}
  name: ${DATABASE_NAME:alert_triage}
  username: ${DATABASE_USERNAME:alerttriage}
  password: ${DATABASE_PASSWORD}
  pool_size: ${DATABASE_POOL_SIZE:20}
  max_connections: ${DATABASE_MAX_CONNECTIONS:100}
  ssl_mode: ${DATABASE_SSL_MODE:require}
  connection_timeout: 30
  query_timeout: 60

# Production caching
cache:
  enabled: true
  type: ${CACHE_TYPE:redis}
  ttl: ${CACHE_TTL:3600}
  max_size: ${CACHE_MAX_SIZE:10000}
  
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    db: ${REDIS_DB:0}
    password: ${REDIS_PASSWORD}
    ssl: ${REDIS_SSL:false}
    pool_size: 20
    connection_timeout: 5

# Production queue settings
queue:
  enabled: ${QUEUE_ENABLED:true}
  type: ${QUEUE_TYPE:redis}
  host: ${QUEUE_HOST:localhost}
  port: ${QUEUE_PORT:6379}
  name: ${QUEUE_NAME:alert_queue}
  batch_size: ${QUEUE_BATCH_SIZE:100}
  worker_processes: ${QUEUE_WORKERS:8}
  
# Production ML/AI settings
ml:
  enabled: ${ML_ENABLED:true}
  model_path: ${ML_MODEL_PATH:data/models/}
  training_enabled: ${ML_TRAINING_ENABLED:false}
  auto_retrain: ${ML_AUTO_RETRAIN:false}
  confidence_threshold: 0.8
  batch_inference: true
  gpu_enabled: ${GPU_ENABLED:false}
  
  models:
    false_positive:
      path: ${FP_MODEL_PATH:data/models/false_positive_model.pkl}
      version: ${FP_MODEL_VERSION:1.0}
      update_interval: 86400  # Daily
    severity:
      path: ${SEVERITY_MODEL_PATH:data/models/severity_model.pkl}
      version: ${SEVERITY_MODEL_VERSION:1.0}
      update_interval: 86400

# Production notification settings
notifications:
  enabled: ${NOTIFICATIONS_ENABLED:true}
  channels:
    email:
      enabled: ${EMAIL_NOTIFICATIONS_ENABLED:false}
      smtp_host: ${SMTP_HOST}
      smtp_port: ${SMTP_PORT:587}
      username: ${SMTP_USERNAME}
      password: ${SMTP_PASSWORD}
      from_address: ${SMTP_FROM}
      tls: ${SMTP_TLS:true}
    slack:
      enabled: ${SLACK_NOTIFICATIONS_ENABLED:false}
      webhook_url: ${SLACK_WEBHOOK_URL}
      channel: ${SLACK_CHANNEL:#security-alerts}
      mention_users: ${SLACK_MENTIONS:[]}
    teams:
      enabled: ${TEAMS_NOTIFICATIONS_ENABLED:false}
      webhook_url: ${TEAMS_WEBHOOK_URL}
    pagerduty:
      enabled: ${PAGERDUTY_ENABLED:false}
      integration_key: ${PAGERDUTY_INTEGRATION_KEY}
      service_key: ${PAGERDUTY_SERVICE_KEY}

# Production backup and recovery
backup:
  enabled: ${BACKUP_ENABLED:true}
  schedule: ${BACKUP_SCHEDULE:0 2 * * *}  # Daily at 2 AM
  retention_days: ${BACKUP_RETENTION:30}
  storage_path: ${BACKUP_PATH:backups/}
  compression: true
  encryption: true
  
# Production performance tuning
performance:
  worker_processes: ${WORKER_PROCESSES:8}
  max_concurrent_tasks: ${MAX_CONCURRENT_TASKS:1000}
  task_timeout: ${TASK_TIMEOUT:300}
  memory_limit: ${MEMORY_LIMIT:2GB}
  cpu_limit: ${CPU_LIMIT:4.0}
  
  circuit_breaker:
    enabled: true
    failure_threshold: ${CIRCUIT_BREAKER_THRESHOLD:10}
    recovery_timeout: ${CIRCUIT_BREAKER_RECOVERY:120}
    
  connection_pooling:
    enabled: true
    min_connections: 10
    max_connections: 100
    
# Compliance and governance
compliance:
  enabled: ${COMPLIANCE_ENABLED:true}
  standards: ${COMPLIANCE_STANDARDS:["SOC2", "ISO27001"]}
  data_retention:
    alerts: 2555  # 7 years in days
    logs: 2555
    metrics: 365  # 1 year
  encryption_at_rest: true
  access_logging: true
  change_tracking: true

# Feature flags for production
features:
  advanced_analytics: ${FEATURE_ADVANCED_ANALYTICS:true}
  ai_recommendations: ${FEATURE_AI_RECOMMENDATIONS:true}
  automated_response: ${FEATURE_AUTOMATED_RESPONSE:true}
  threat_hunting: ${FEATURE_THREAT_HUNTING:false}
  compliance_reporting: ${FEATURE_COMPLIANCE_REPORTING:true}
  multi_tenancy: ${FEATURE_MULTI_TENANCY:false}
  api_v2: ${FEATURE_API_V2:false}

# Resource limits and quotas
limits:
  max_alerts_per_minute: ${MAX_ALERTS_PER_MINUTE:5000}
  max_concurrent_workflows: ${MAX_CONCURRENT_WORKFLOWS:1000}
  max_file_upload_size: ${MAX_FILE_UPLOAD_SIZE:10485760}  # 10MB
  max_api_requests_per_hour: ${MAX_API_REQUESTS_PER_HOUR:100000}
  max_webhook_retries: 3
  max_query_results: 10000